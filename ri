#!/bin/bash

############### REPO Installer ################
#    Script designed to wrap a GitHub repo    #
#    Allows for program installation as if    #
#    coming from a package manager like apt   #
#  Requires a ri.cfg file so the script knows #
# what files to copy where and where the PATH #
#        will point to for said program       #
###############################################

[ $MSYSTEM ] && BIN=~/bin || BIN='/usr/local/bin'
[ `command -v sudo` ] && sudo=sudo || sudo=""
[ "$1" == '-v' ] && echo "v1.0.0" && exit

# Functions
parse() {
  local installDesc=`echo "$1" | cut -d '>' -f1`
  local toBeCopied=`echo "$1" | cut -d '>' -f2`
  local destination=`echo "$1" | cut -d '>' -f3`
  local onTrue=`echo "$1" | cut -d '>' -f4`
  local onFalse=`echo "$1" | cut -d '>' -f5`
  [[ $destination =~ "BIN" ]] && destination=$(echo "$destination" | sed "s|BIN|$BIN|g")
  [[ $destination =~ "HOME" ]] && destination=$(echo "$destination" | sed "s|HOME|/home/`id -u -n`|g")
  case $installDesc in
    f )
      echo "Copying '$toBeCopied' to $destination/$toBeCopied"
      $sudo cp $toBeCopied $destination/$toBeCopied
      ;;
    d )
      echo "Copying folder '$toBeCopied' to $destination"
      sudo cp $toBeCopied/* $destination/ > /dev/null || cp $toBeCopied/* $destination/
      ;;
    r )
      echo "Copying folder and subfolders of '$toBeCopied' to $destination"
      sudo cp -r $toBeCopied $destination/ > /dev/null || cp -r $toBeCopied $destination/
      ;;
    x )
      echo "Executing file '$toBeCopied' in directory $PWD"
      source ./$toBeCopied $destination
      ;;
    e )
      echo "$1" | cut -d '>' -f2
      ;;
    c )
      # Use destination to hold condition
      [[ $onTrue =~ "BIN" ]] && onTrue=$(echo "$onTrue" | sed "s|BIN|$BIN|g")
      [[ $onTrue =~ "HOME" ]] && onTrue=$(echo "$onTrue" | sed "s|HOME|$HOME|g")
      [[ $onFalse =~ "BIN" ]] && onFalse=$(echo "$onFalse" | sed "s|BIN|$BIN|g")
      [[ $onFalse =~ "HOME" ]] && onFalse=$(echo "$onFalse" | sed "s|HOME|$HOME|g")
      if [[ $destination ]]; then cp $toBeCopied $onTrue/; else cp $toBeCopied $onFalse/; fi
      ;;
    * )
      echo "Flag '$installDesc' doesn't exist!"
      ;;
  esac
}

# Default action is to move every file in the folder that doesn't match the global ignore rule
# Default destination is the user's ~/bin folder
[ ! -e $(pwd)/.git ] && `echo "Not a git repository!" && exit`
if [ -e ./ri.cfg ]; then
  # Read cfg line by line to determine destination for program files
  if [[ `cat ./ri.cfg | wc -l` == "1" ]]; then
    parse `cat ./ri.cfg | sed -E 's/\s*>\s*/>/g'`
  else
    IFS=''
    while read line; do
      # [[ -z "$line" || "$line" == "\r\n" ]] && continue
      # Preemptively grab comments before processing
      [[ "$line" =~ "#" ]] && continue
      if [[ "$line" =~ ">" ]]; then
        line=$(echo "$line" | sed -E 's/\s*>\s*/>/g' )
        # echo "$line"
        # Do install parse
        parse $line
      else continue; fi
    done < ./ri.cfg
  fi
else
  cp -r ./* ~/bin
fi
